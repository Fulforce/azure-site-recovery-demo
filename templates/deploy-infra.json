{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "lawResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the Log Analytics Workspace"
            }
        },
        "priLocation": {
            "type": "string",
            "metadata": {
                "description": "The name of the primary region resources will be deployed to"
            }
        },
        "rsVaultRepPolicyFeResId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the replication policy used for the frontend"
            }
        },
        "rsVaultRepPolicyBeResId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the basic backup policy used for the backend"
            }
        },
        "rsVaultName": {
            "type": "string",
            "metadata": {
                "description": "The name of the secondary region (must be the paired region)"
            }
        },
        "rsVaultRg": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group the Recovery Services Vault is in"
            }
        },
        "secLocation": {
            "type": "string",
            "metadata": {
                "description": "The name of the secondary region the VMs will failover to"
            }
        },
        "secResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group in the secondary region"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that will be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        }
    },
    "variables": {
        "diagnosticApiVersion": "2017-05-01-preview",
        "networkApiVersion": "2020-07-01",
        "rcvSvcVltApiVersion": "2022-04-01",
        "resourcesApiVersion": "2020-06-01",
        "storageApiVersion": "2021-09-01",
        "availabilityZone": "1",
        "bastionName": "[concat('bst', parameters('uniqueData'))]",
        "bastionPublicIpName": "[concat('pip-bst', parameters('uniqueData'))]",
        "bastionSubnetName": "AzureBastionSubnet",
        "deployVmRepl": "deploy-vm-replication",
        "deploySecInfRes": "deploy-sec-reg-inf",
        "deploySecVnetPeering": "deploy-sec-vnet-peering",
        "deployVmWinPriServer1": "deploy-vm-win-pri-1-cf-fe",
        "deployVmWinPriServer2": "deploy-vm-win-pri-1-cf-be",
        "deployVmWinPriServer3": "deploy-vm-win-pri-1-ncf-fe",
        "priResourceGroupName": "[resourceGroup().name]",
        "replA2ABeMappingFailover": "a2aberecovery-centralus",
        "replA2ABeMappingFailBack": "a2abefailback-eastus2",
        "replA2AFeMappingFailover": "a2arecovery-centralus",
        "replA2AFeMappingFailBack": "a2afailback-eastus2",
        "replA2ABeProtItemVm1": "be1",
        "replA2AFeProtItemVm1": "fe1",
        "replA2AFabricContDst": "a2areplcon-eastus2",
        "replA2AFabricContSrc": "a2areplcon-centralus",
        "replA2AFabricObjDst": "[concat(parameters('secLocation'),'-a2afabric')]",
        "replA2AFabricObjSrc": "[concat(parameters('priLocation'),'-a2afabric')]",
        "replNetworkMappingSrc": "a2acentustoeastus2nwmap",
        "replNetworkMappingDst": "a2aeastus2tocentusnwmap",
        "storageAccountCacheName": "[concat('stcache', parameters('uniqueData'))]",
        "templateUriWin": "[concat(uri(deployment().properties.templateLink.uri,'deploy-windows-vm.json'))]",
        "vmSku": "Standard_D4s_v5",
        "vmWinPriServer1Name": "vmwpri1cffe",
        "vmWinPriServer1Ip": "10.0.2.5",
        "vmWinPriServer2Name": "vmwpri1cfbe",
        "vmWinPriServer2Ip": "10.0.3.5",
        "vmWinPriServer3Name": "vmwpri2ncfe",
        "vmWinPriServer3Ip": "10.0.2.10",
        "workloadBeSubnetName": "snet-wl-be",
        "workloadFeSubnetName": "snet-wl-fe",
        "wlPriBeNsgName": "nsg-wl-be-pri",
        "wlPriFeNsgName": "nsg-wl-fe-pri",
        "wlPriPeerName": "peertosec",
        "wlPriResourceGroupName": "[resourceGroup().name]",
        "wlPriVnetBastionSubnetCidr": "10.0.1.0/24",
        "wlPriVnetCidr": "10.0.0.0/16",
        "wlPriVnetName": "[concat('vnet-wl-pri', parameters('uniqueData'))]",
        "wlPriVnetWlBeSubnetCidr": "10.0.3.0/24",
        "wlPriVnetWlFeSubnetCidr": "10.0.2.0/24",
        "wlSecBeNsgName": "nsg-wl-fe-sec",
        "wlSecFeNsgName": "nsg-wl-be-sec",
        "wlSecPeerName": "peertopri",
        "wlSecVnetCidr": "10.1.0.0/16",
        "wlSecVnetName": "[concat('vnet-wl-sec', parameters('uniqueData'))]",
        "wlSecVnetWlBeSubnetCidr": "10.1.2.0/24",
        "wlSecVnetWlFeSubnetCidr": "10.1.1.0/24"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersion')]",
            "name": "[variables('storageAccountCacheName')]",
            "location": "[parameters('priLocation')]",
            "tags": "[parameters('tags')]",
            "kind": "Storage",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
            },
            "resources": [
            ]
        },
        {
            "name": "[variables('bastionPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('priLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('wlPriFeNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('priLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('wlPriBeNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('priLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "name": "[variables('deploySecInfRes')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('secResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "name": "[variables('wlSecFeNsgName')]",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[parameters('secLocation')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "securityRules": []
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "name": "[variables('wlSecBeNsgName')]",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[parameters('secLocation')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "securityRules": []
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "name": "[variables('wlSecVnetName')]",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[parameters('secLocation')]",
                            "tags": "[parameters('tags')]",
                            "dependsOn": [
                                "[resourceId(parameters('secResourceGroupName'),'Microsoft.Network/networkSecurityGroups', variables('wlSecFeNsgName'))]",
                                "[resourceId(parameters('secResourceGroupName'),'Microsoft.Network/networkSecurityGroups', variables('wlSecBeNsgName'))]"
                            ],
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[variables('wlSecVnetCidr')]"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[variables('workloadFeSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[variables('wlSecVnetWlFeSubnetCidr')]",
                                            "networkSecurityGroup": {
                                                "id": "[resourceId(parameters('secResourceGroupName'),'Microsoft.Network/networkSecurityGroups',variables('wlSecFeNsgName'))]"
                                            }
                                        }
                                    },
                                    {
                                        "name": "[variables('workloadBeSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[variables('wlSecVnetWlBeSubnetCidr')]",
                                            "networkSecurityGroup": {
                                                "id": "[resourceId(parameters('secResourceGroupName'),'Microsoft.Network/networkSecurityGroups',variables('wlSecBeNsgName'))]"
                                            }
                                        }
                                    }
                                ],
                                "enableDdosProtection": false
                            },
                            "resources": [
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('wlPriVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('priLocation')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('wlPriFeNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('wlPriBeNsgName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('deploySecInfRes'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('wlPriVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('bastionSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('wlPriVnetBastionSubnetCidr')]"
                        }
                    },
                    {
                        "name": "[variables('workloadFeSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('wlPriVnetWlFeSubnetCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('wlPriFeNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('workloadBeSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('wlPriVnetWlBeSubnetCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('wlPriBeNsgName'))]"
                            }
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "resources": [
                {
                    "name": "[variables('wlPriPeerName')]",
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "[variables('networkApiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('wlPriVnetName'))]"
                    ],
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId(parameters('secResourceGroupName'),'Microsoft.Network/virtualNetworks',variables('wlSecVnetName'))]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('deploySecVnetPeering')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('secResourceGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', variables('wlPriVnetName'), variables('wlPriPeerName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(variables('wlSecVnetName'),'/',variables('wlSecPeerName'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[parameters('secLocation')]",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "true",
                                "useRemoteGateways": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId(variables('wlPriResourceGroupName'), 'Microsoft.Network/virtualNetworks', variables('wlPriVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('bastionName')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('priLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('wlPriVnetName'))]",
                "[concat('Microsoft.Resources/deployments/',variables('deploySecVnetPeering'))]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "bastionConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('wlPriVnetName'), variables('bastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('bastionName'),'/microsoft.insights/diag')]",
            "type": "Microsoft.Network/bastionHosts/providers/diagnosticSettings",
            "apiVersion": "[variables('diagnosticApiVersion')]",
            "location": "[parameters('priLocation')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/bastionHosts',variables('bastionName'))]"
            ],
            "properties": {
                "name": "SendToWorkspace",
                "workspaceId": "[parameters('lawResourceId')]",
                "logs": [
                    {
                        "category": "BastionAuditLogs",
                        "enabled": true
                    }
                ],
                "metrics": [
                ]
            },
            "resources": [
            ]
        },
        {
            "name": "[variables('deployVmWinPriServer1')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/bastionHosts',variables('bastionName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "availabilityZone": {
                        "value": "[variables('availabilityZone')]"
                    },
                    "serverIpAddress": {
                        "value": "[variables('vmWinPriServer1Ip')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(parameters('lawResourceId'), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(parameters('lawResourceId'), '2015-03-20').primarySharedKey]"
                    },
                    "subnetName": {
                        "value": "[variables('workloadFeSubnetName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "vmName": {
                        "value": "[variables('vmWinPriServer1Name')]"
                    },
                    "vnetName": {
                        "value": "[variables('wlPriVnetName')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('templateUriWin')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployVmWinPriServer2')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('deployVmWinPriServer1'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "availabilityZone": {
                        "value": "[variables('availabilityZone')]"
                    },
                    "serverIpAddress": {
                        "value": "[variables('vmWinPriServer2Ip')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(parameters('lawResourceId'), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(parameters('lawResourceId'), '2015-03-20').primarySharedKey]"
                    },
                    "subnetName": {
                        "value": "[variables('workloadBeSubnetName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "vmName": {
                        "value": "[variables('vmWinPriServer2Name')]"
                    },
                    "vnetName": {
                        "value": "[variables('wlPriVnetName')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('templateUriWin')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployVmWinPriServer3')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('deployVmWinPriServer2'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "availabilityZone": {
                        "value": "[variables('availabilityZone')]"
                    },
                    "serverIpAddress": {
                        "value": "[variables('vmWinPriServer3Ip')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(parameters('lawResourceId'), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(parameters('lawResourceId'), '2015-03-20').primarySharedKey]"
                    },
                    "subnetName": {
                        "value": "[variables('workloadFeSubnetName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "vmName": {
                        "value": "[variables('vmWinPriServer3Name')]"
                    },
                    "vnetName": {
                        "value": "[variables('wlPriVnetName')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('templateUriWin')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployVmRepl')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('deployVmWinPriServer3'))]"
            ],
            "resourceGroup": "[parameters('rsVaultRg')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjSrc'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [],
                            "properties": {
                                "customDetails": {
                                    "instanceType": "Azure",
                                    "location": "[parameters('priLocation')]"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjDst'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjSrc'))]"
                            ],
                            "properties": {
                                "customDetails": {
                                    "instanceType": "Azure",
                                    "location": "[parameters('secLocation')]"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjSrc'),'/',variables('replA2AFabricContSrc'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjDst'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjSrc'))]"
                            ],
                            "properties": {
                                "providerSpecificInput": [
                                    {
                                        "instanceType": "A2A"
                                    }
                                ]
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjDst'),'/',variables('replA2AFabricContDst'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjDst'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjSrc'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers', parameters('rsVaultName'), variables('replA2AFabricObjSrc'), variables('replA2AFabricContSrc'))]"
                            ],
                            "properties": {
                                "providerSpecificInput": [
                                    {
                                        "instanceType": "A2A"
                                    }
                                ]
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjSrc'),'/',variables('replA2AFabricContSrc'),'/',variables('replA2AFeMappingFailover'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers', parameters('rsVaultName'), variables('replA2AFabricObjDst'), variables('replA2AFabricContDst'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers', parameters('rsVaultName'), variables('replA2AFabricObjSrc'), variables('replA2AFabricContSrc'))]"
                            ],
                            "properties": {
                                "policyId": "[parameters('rsVaultRepPolicyFeResId')]",
                                "providerSpecificInput": {
                                    "instanceType": "A2A",
                                    "agentAutoUpdateStatus": "Disabled"
                                },
                                "targetProtectionContainerId": "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers',parameters('rsVaultName'),variables('replA2AFabricObjDst'),variables('replA2AFabricContDst'))]"
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjDst'),'/',variables('replA2AFabricContDst'),'/',variables('replA2AFeMappingFailback'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings', parameters('rsVaultName'), variables('replA2AFabricObjSrc'), variables('replA2AFabricContSrc'), variables('replA2AFeMappingFailover'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers', parameters('rsVaultName'), variables('replA2AFabricObjDst'), variables('replA2AFabricContDst'))]"
                            ],
                            "properties": {
                                "policyId": "[parameters('rsVaultRepPolicyFeResId')]",
                                "providerSpecificInput": {
                                    "instanceType": "A2A",
                                    "agentAutoUpdateStatus": "Disabled"
                                },
                                "targetProtectionContainerId": "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers',parameters('rsVaultName'),variables('replA2AFabricObjSrc'),variables('replA2AFabricContSrc'))]"
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjSrc'),'/',variables('replA2AFabricContSrc'),'/',variables('replA2ABeMappingFailover'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers', parameters('rsVaultName'), variables('replA2AFabricObjDst'), variables('replA2AFabricContDst'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers', parameters('rsVaultName'), variables('replA2AFabricObjSrc'), variables('replA2AFabricContSrc'))]"
                            ],
                            "properties": {
                                "policyId": "[parameters('rsVaultRepPolicyBeResId')]",
                                "providerSpecificInput": {
                                    "instanceType": "A2A",
                                    "agentAutoUpdateStatus": "Disabled"
                                },
                                "targetProtectionContainerId": "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers',parameters('rsVaultName'),variables('replA2AFabricObjDst'),variables('replA2AFabricContDst'))]"
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjDst'),'/',variables('replA2AFabricContDst'),'/',variables('replA2ABeMappingFailback'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings', parameters('rsVaultName'), variables('replA2AFabricObjSrc'), variables('replA2AFabricContSrc'), variables('replA2ABeMappingFailover'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers', parameters('rsVaultName'), variables('replA2AFabricObjDst'), variables('replA2AFabricContDst'))]"
                            ],
                            "properties": {
                                "policyId": "[parameters('rsVaultRepPolicyBeResId')]",
                                "providerSpecificInput": {
                                    "instanceType": "A2A",
                                    "agentAutoUpdateStatus": "Disabled"
                                },
                                "targetProtectionContainerId": "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers',parameters('rsVaultName'),variables('replA2AFabricObjSrc'),variables('replA2AFabricContSrc'))]"
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjSrc'),'/azureNetwork/',variables('replNetworkMappingSrc'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationNetworks/replicationNetworkMappings",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings', parameters('rsVaultName'), variables('replA2AFabricObjDst'), variables('replA2AFabricContDst'), variables('replA2ABeMappingFailBack'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjSrc'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjDst'))]"
                            ],
                            "properties": {
                                "fabricSpecificDetails": {
                                    "instanceType": "AzureToAzure",
                                    "primaryNetworkId": "[resourceId(variables('priResourceGroupName'),'Microsoft.Network/virtualnetworks',variables('wlPriVnetName'))]"
                                },
                                "recoveryFabricName": "[variables('replA2AFabricObjDst')]",
                                "recoveryNetworkId": "[resourceId(parameters('secResourceGroupName'),'Microsoft.Network/virtualNetworks', variables('wlSecVnetName'))]"
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjDst'),'/azureNetwork/',variables('replNetworkMappingDst'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationNetworks/replicationNetworkMappings",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationNetworks/replicationNetworkMappings', parameters('rsVaultName'), variables('replA2AFabricObjSrc'), 'azureNetwork', variables('replNetworkMappingSrc'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjSrc'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjDst'))]"
                            ],
                            "properties": {
                                "fabricSpecificDetails": {
                                    "instanceType": "AzureToAzure",
                                    "primaryNetworkId": "[resourceId(parameters('secResourceGroupName'),'Microsoft.Network/virtualNetworks', variables('wlSecVnetName'))]"
                                },
                                "recoveryFabricName": "[variables('replA2AFabricObjSrc')]",
                                "recoveryNetworkId": "[resourceId(variables('priResourceGroupName'),'Microsoft.Network/virtualnetworks',variables('wlPriVnetName'))]"
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjSrc'),'/',variables('replA2AFabricContSrc'),'/',variables('replA2AFeProtItemVm1'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectedItems",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationNetworks/replicationNetworkMappings', parameters('rsVaultName'), variables('replA2AFabricObjDst'), 'azureNetwork', variables('replNetworkMappingDst'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjSrc'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjDst'))]"
                            ],
                            "properties": {
                                "policyId": "[parameters('rsVaultRepPolicyFeResId')]",
                                "providerSpecificDetails": {
                                    "instanceType": "A2A",
                                    "recoveryAzureVMName": "[variables('vmWinPriServer1Name')]",
                                    "fabricObjectId": "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics',parameters('rsVaultName'),variables('replA2AFabricObjSrc'))]",
                                    "recoveryContainerId": "[variables('replA2AFabricContDst')]",
                                    "recoveryResourceGroupId": "[concat(subscription().id,'/resourceGroups/',parameters('secResourceGroupName'))]",
                                    "primaryFabricLocation": "[parameters('priLocation')]",
                                    "recoveryFabricLocation": "[parameters('secLocation')]",
                                    "recoveryAzureVMSize": "[variables('vmSku')]",
                                    "vmManagedDisks": [
                                        {
                                            "diskId": "[reference(variables('deployVmWinPriServer1')).outputs.osManagedDiskResId.value]",
                                            "recoveryResourceGroupId": "[concat(subscription().id,'/resourceGroups/',parameters('secResourceGroupName'))]",
                                            "recoveryReplicaDiskAccountType": "[reference(variables('deployVmWinPriServer1')).outputs.osDiskType.value]",
                                            "recoveryTargetDiskAccountType": "[reference(variables('deployVmWinPriServer1')).outputs.osDiskType.value]",
                                            "primaryStagingAzureStorageAccountId": "[resourceId(variables('priResourceGroupName'),'Microsoft.Storage/storageAccounts',variables('storageAccountCacheName'))]"
                                        },
                                        {
                                            "diskId": "[reference(variables('deployVmWinPriServer1')).outputs.dataManagedDiskResId.value]",
                                            "recoveryResourceGroupId": "[concat(subscription().id,'/resourceGroups/',parameters('secResourceGroupName'))]",
                                            "recoveryReplicaDiskAccountType": "[reference(variables('deployVmWinPriServer1')).outputs.dataDiskType.value]",
                                            "recoveryTargetDiskAccountType": "[reference(variables('deployVmWinPriServer1')).outputs.dataDiskType.value]",
                                            "primaryStagingAzureStorageAccountId": "[resourceId(variables('priResourceGroupName'),'Microsoft.Storage/storageAccounts',variables('storageAccountCacheName'))]"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('rsVaultName'),'/',variables('replA2AFabricObjSrc'),'/',variables('replA2AFabricContSrc'),'/',variables('replA2ABeProtItemVm1'))]",
                            "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectedItems",
                            "apiVersion": "[variables('rcvSvcVltApiVersion')]",
                            "dependsOn": [
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectedItems', parameters('rsVaultName'), variables('replA2AFabricObjSrc'), variables('replA2AFabricContSrc'), variables('replA2AFeProtItemVm1'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjSrc'))]",
                                "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics', parameters('rsVaultName'), variables('replA2AFabricObjDst'))]"
                            ],
                            "properties": {
                                "policyId": "[parameters('rsVaultRepPolicyBeResId')]",
                                "providerSpecificDetails": {
                                    "instanceType": "A2A",
                                    "recoveryAzureVMName": "[variables('vmWinPriServer2Name')]",
                                    "fabricObjectId": "[resourceId(parameters('rsVaultRg'),'Microsoft.RecoveryServices/vaults/replicationFabrics',parameters('rsVaultName'),variables('replA2AFabricObjSrc'))]",
                                    "recoveryContainerId": "[variables('replA2AFabricContDst')]",
                                    "recoveryResourceGroupId": "[concat(subscription().id,'/resourceGroups/',parameters('secResourceGroupName'))]",
                                    "primaryFabricLocation": "[parameters('priLocation')]",
                                    "recoveryFabricLocation": "[parameters('secLocation')]",
                                    "recoveryAzureVMSize": "[variables('vmSku')]",
                                    "vmManagedDisks": [
                                        {
                                            "diskId": "[reference(variables('deployVmWinPriServer2')).outputs.osManagedDiskResId.value]",
                                            "recoveryResourceGroupId": "[concat(subscription().id,'/resourceGroups/',parameters('secResourceGroupName'))]",
                                            "recoveryReplicaDiskAccountType": "[reference(variables('deployVmWinPriServer2')).outputs.osDiskType.value]",
                                            "recoveryTargetDiskAccountType": "[reference(variables('deployVmWinPriServer2')).outputs.osDiskType.value]",
                                            "primaryStagingAzureStorageAccountId": "[resourceId(variables('priResourceGroupName'),'Microsoft.Storage/storageAccounts',variables('storageAccountCacheName'))]"
                                        },
                                        {
                                            "diskId": "[reference(variables('deployVmWinPriServer2')).outputs.dataManagedDiskResId.value]",
                                            "recoveryResourceGroupId": "[concat(subscription().id,'/resourceGroups/',parameters('secResourceGroupName'))]",
                                            "recoveryReplicaDiskAccountType": "[reference(variables('deployVmWinPriServer2')).outputs.dataDiskType.value]",
                                            "recoveryTargetDiskAccountType": "[reference(variables('deployVmWinPriServer2')).outputs.dataDiskType.value]",
                                            "primaryStagingAzureStorageAccountId": "[resourceId(variables('priResourceGroupName'),'Microsoft.Storage/storageAccounts',variables('storageAccountCacheName'))]"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
    }
}